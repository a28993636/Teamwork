@model Teamwork.ViewModels.VMTask

@{
    Layout = "_Layout";
    ViewData["Title"] = "Edit Page ~ Layout";
   
}

<h2 class="text-center">編輯任務</h2>


<hr />
<div class="row ms-2 me-2 justify-content-center">
    <div class="col-sm-8 col-md-6 col-lg-5">
        <form asp-action="Edit" id="editForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Task.TaskID" />
            <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
            <div class="form-group">
                <label asp-for="Task.TaskName" class="control-label"></label>
                <input asp-for="Task.TaskName" class="form-control text-break" id="Task_TaskName" />
                <span asp-validation-for="Task.TaskName" class="text-danger"></span>
                <span id="taskNameError" class="text-danger" style="display:none;">任務名稱已經存在，請使用不同的名稱。</span>
            </div>

            <div class="form-group">
                <label asp-for="Task.TaskStartDate" class="control-label"></label>
                <input type="datetime-local" asp-for="Task.TaskStartDate" id="Task_TaskStartDate" class="form-control" />
                <span asp-validation-for="Task.TaskStartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Task.TaskEndDate" class="control-label"></label>
                <input type="datetime-local" asp-for="Task.TaskEndDate" id="Task_TaskEndDate" class="form-control" />
                <span asp-validation-for="Task.TaskEndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Task.StatusNo" class="control-label"></label>
                <select asp-for="Task.StatusNo" class="form-control" asp-items="ViewBag.StatusNo"></select>
                <span asp-validation-for="Task.StatusNo" class="text-danger"></span>
            </div>            
            <div class="form-group">
                    <label asp-for="Task.TaskTypeNo" class="control-label"></label>
                    <select asp-for="Task.TaskTypeNo" class="form-control" asp-items="ViewBag.TaskTypeNo"></select>
                    <span asp-validation-for="Task.TaskTypeNo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">任務</label>
                <select id="taskPG" class="form-control valid" onchange="toggleGroupSelect()" aria-invalid="false">
                    <option value="personal">個人任務</option>
                    <option value="group">小組任務</option>
                </select>
            </div>
            <div class="form-group" id="groupSelect">
                    <label asp-for="Task.GroupNo" class="control-label"></label>
                    <select asp-for="Task.GroupNo" class="form-control" asp-items="ViewBag.GroupNo" id="Task_GroupNo">
                    <option value="">請選擇小組</option>
                </select>
                    <span asp-validation-for="Task.GroupNo" class="text-danger"></span>
            </div>
                <input type="hidden" id="hiddenGroupNo" name="GroupNo" value="@(Model.Task.GroupNo ?? "NULL")">
            <div class="form-group">
                <label asp-for="TaskDetail.TaskContent" class="control-label"></label>
                <input asp-for="TaskDetail.TaskContent" class="form-control text-break" />
                <span asp-validation-for="TaskDetail.TaskContent" class="text-danger"></span>
            </div>


                <input type="hidden" asp-for="TaskDetail.TaskID" />
                <input type="hidden" asp-for="TaskDetail.EmployeeID" />

            <div class="form-group mt-2 text-end">
                <input type="submit" value="儲存" class="btn btn-outline-primary" />
                <a href="javascript:history.back()" class="btn btn-outline-dark">取消</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
  @*   <script src="~/js/taskFunctions.js"></script> *@
    
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const startDateInput = document.getElementById("Task_TaskStartDate");
            const endDateInput = document.getElementById("Task_TaskndDate");
            

            function updateEndDateMin() {
                if (startDateInput && endDateInput) {
                    endDateInput.min = startDateInput.value;
                }
            }

            // 頁面加載時設置開始時間 (如果 Model 有值)
            if (startDateInput) {
                updateEndDateMin(); // 確保結束時間的 min 屬性正確
                startDateInput.addEventListener("change", updateEndDateMin);
            } else {
                console.error("Task_TaskStartDate not found on page load");
            }

              
      
       
            const taskPG = document.getElementById("taskPG");
            const groupSelect = document.getElementById("groupSelect");
            const groupNoSelect  = document.getElementById("Task_GroupNo");
            const hiddenInput = document.getElementById("hiddenGroupNo");

            // 根據後端傳來的 ViewBag.TaskPG 或 Model.GroupNo 初始化
            const isGroupTask = @(Model.Task.GroupNo != null ? "true" : "false") ;
            const initialTaskType = '@ViewBag.TaskPG' || (isGroupTask === 'true' ? 'group' : 'personal');
            console.log("initialTaskType:", initialTaskType);
            taskPG.value = initialTaskType;

            // 根據初始任務類型顯示或隱藏小組選擇欄位
            if (initialTaskType === "group"){
                groupSelect.style.display = "block";
                hiddenInput.value = groupNoSelect.value;
            } else {
                groupSelect.style.display = "none";
                groupNoSelect.value = ""; // 確保 groupNo 沒值
                hiddenInput.value = "NULL"; // 避免傳送不正確的值
            }
          

            taskPG.addEventListener("change",function(){
                
                if (taskPG.value === 'group') {
                    groupSelect.style.display = 'block'; // 顯示小組選擇清單
                    hiddenInput.value = groupSelect.value; // 設定選中的小組值
                } else {
                    groupSelect.style.display = 'none'; // 隱藏小組選擇清單
                    groupNoSelect.value = ''; // 將小組選擇設為空值（NULL）
                    hiddenInput.value = "NULL";
                }
            });
                // 監聽小組選擇變更
            groupNoSelect.addEventListener("change", function () {
                hiddenInput.value = this.value || "NULL"; // 如果未選擇小組，設為 NULL
            });

        });
        
        $(document).ready(function () {
                var taskNameInput = document.getElementById('Task_TaskName');
                var form = document.getElementById('editForm');
                var errorSpan = document.getElementById('taskNameError');
            
           
                var taskId = $("#Task_TaskID").val(); // 獲取當前 TaskID
                var isTaskNameValid = true;

                // 即時檢查 TaskName
                taskNameInput.addEventListener("input", function () {
                    var taskName = $(this).val();

                    if (taskName.length > 0) {
                        $.ajax({
                            url: "/Tasks/CheckTaskName",
                            type: "GET",
                            data: { taskName: taskName, taskId: taskId },
                            success: function (response) {
                                if (response.exists) {
                                    errorSpan.style.display = 'block'; // 使用原生 JS 顯示
                                    isTaskNameValid = false;
                                } else {
                                    errorSpan.style.display = 'none'; // 使用原生 JS 隱藏
                                    isTaskNameValid = true;
                                }
                            },
                            error: function () {
                                console.log("檢查 TaskName 失敗");
                            }
                        });
                    } else {
                        errorSpan.hide();
                        isTaskNameValid = true;
                    }
                });

                // 表單提交時檢查
                form.addEventListener("submit", function (e) {
                    if (!isTaskNameValid) {
                        e.preventDefault(); // 阻止表單提交
                        errorSpan.style.display = 'block'; // 使用原生 JS 顯示
                    }
                });
            });
    </script>


}
